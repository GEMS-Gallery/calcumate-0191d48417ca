type Proposal = 
 record {
   clientName: text;
   projectName: text;
   status: text;
   submissionDate: text;
   value: float64;
 };
type Lead = 
 record {
   assignee: text;
   createdTime: text;
   email: text;
   name: text;
   status: text;
 };
type Email = 
 record {
   recipient: text;
   sentTime: text;
   status: text;
   subject: text;
 };
type Appointment = 
 record {
   clientName: text;
   date: text;
   purpose: text;
   time: text;
 };
service : {
  addLead: (text, text, text, text, text) -> ();
  getAppointments: () -> (vec Appointment) query;
  getCountryData: () -> (vec record {
                               text;
                               float64;
                             }) query;
  getEmailData: () -> (vec record {
                             text;
                             float64;
                           }) query;
  getEmails: () -> (vec Email) query;
  getLeads: () -> (vec Lead) query;
  getMetrics: () ->
   (record {
      appointments: nat;
      emails: nat;
      newLeads: nat;
      proposals: nat;
    }) query;
  getNewLeads: () -> (vec Lead) query;
  getProposals: () -> (vec Proposal) query;
}
